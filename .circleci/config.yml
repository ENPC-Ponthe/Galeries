# Python CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-python/ for more details
#
version: 2
jobs:
  lint:
    docker:
      - image: circleci/python:3.7
    steps:
      - checkout
      - restore_cache:
          key: deps1-{{ .Branch }}-{{ checksum "web/app/dev.requirements.txt" }}
      - run: cd web/app && sudo pip install -r dev.requirements.txt
      - run: pylint --exit-zero --rcfile=web/app/.pylintrc ponthe

  test:
    docker:
      - image: circleci/python:3.7
    steps:
      - checkout
      - restore_cache:
          key: deps1-{{ .Branch }}-{{ checksum "web/app/dev.requirements.txt" }}
      - run: mkdir web/app/instance/keys/ && mkdir web/app/instance/club_folder/ && mkdir web/app/instance/club_folder/logs/
      - run: cd web/app/instance/keys/ && openssl genrsa -out jwtRS256-private.pem 2048 && openssl rsa -in jwtRS256-private.pem -pubout -out jwtRS256-public.pem
      - run: cd web/app && sudo pip install -r dev.requirements.txt
      - run: py.test --cov-report term --cov=ponthe web/app/ponthe/tests/
      - store_artifacts:
          path: test-reports/
          destination: tr1
      - store_test_results:
          path: test-reports/

  build:
    docker:
      - image: docker:17-git
    steps:
      - setup_remote_docker:
            docker_layer_caching: true
      - run: apk --no-cache add py-pip && pip install 'docker-compose==1.18.0'
      - checkout
      - run: cp .env.dist .env
      - run: sed -i s/secretSSHPassword/${BUILD_SSH_PASSWORD}/g .env
      - run: docker login -u $DOCKER_USER -p $DOCKER_PASSWORD quay.io
      - run: |
          export TAG=${CIRCLE_BRANCH}
          docker-compose -f docker-compose.yml build
          docker-compose -f docker-compose.yml push

workflows:
  version: 2
  main:
    jobs:
      - lint
      - test
      - build:
          requires:
            - test
          filters:
            branches:
              only:
                - master
